using System;
using System.Data;

public class DataSource
{
    private int[,] Arr;

    #region 自定义数组
    int[,] arr = new int[,]
    {
            {1  ,0      ,1000   ,2600   ,4400   },
            {2  ,-1     ,-1     ,-1     ,4200   },
            {3  ,-1     ,-1     ,-1     ,-1     },
            {4  ,-1     ,-1     ,3300   , -1    },
            {5  ,1100   ,-1     ,-1     , -1    },
            {6  ,-1     ,-1     ,-1     , 5300  },
            {7  ,-1     ,-1     ,-1     ,-1     },
            {8  ,-1     ,2000   , -1    , -1    },
            {9  ,-1     , -1    , 2700  , -1    },
            {10 ,-1     , -1    , -1    , -1    },
            {11 , -1    , -1    , -1    , 2800  },
            {12 , -1    , -1    , 3500  , -1    },
            {13 , -1    , -1    , -1    , -1    },
            {14 , -1    , -1    , -1    , -1    },
            {15 , -1    , -1    , -1    , 3800  },
            {16 , -1    , -1    , -1    , -1    },
            {17 , -1    , -1    , -1    , -1    },
            {18 , -1    , -1    , 2300  , -1    },
            {19 , -1    , 1000  , -1    , 3400  },
            {20 , -1    , -1    , -1    , -1    },
            {21 , 300   , -1    , -1    , -1    },
            {22 , -1    , -1    , -1    , -1    },
            {23 , -1    , -1    , 2800  , 4500  },
            {24 , -1    , -1    , -1    , -1    },
            {25 , -1    , -1    , -1    , -1    },
            {26 , 1700  , -1    , -1    , -1    },
            {27 , -1    , 1200  , -1    , 2850  },
            {28 , -1    , -1    , 2200  , -1    },
            {29 , -1    ,-1     , -1    , 3700  },
            {30 , 400   , 500   , 2500  , 3650  },
            {31 , 300   , 400   , 2800  , 3300  }
    };
    int[,] arr1 = new int[,]
    {
            {1  ,-1     ,1000   ,2600   ,4400   },
            {2  ,500    ,-1     ,-1     ,4200   },
            {3  ,-1     ,-1     ,3300   , -1    }
    };

    int[,] arr3 = new int[,]
    {
            {1  ,600    ,1000   ,2600   ,4400   },
            {2  ,-1     ,-1     ,-1     ,4200   },
            {3  ,-1     ,-1     ,-1     ,-1     },
            {4  ,-1     ,-1     ,3300   , -1    },
            {5  ,1100   ,-1     ,-1     , -1    },
            {6  ,-1     ,-1     ,-1     , 5300  },
            {7  ,-1     ,-1     ,-1     ,-1     },
            {8  ,-1     ,2000   , -1    , -1    },
            {9  ,-1     , -1    , 2700  , -1    },
            {10 ,-1     , -1    , -1    , -1    },
            {11 , -1    , -1    , -1    , 2800  },
            {12 , -1    , -1    , 3500  , -1    },
            {13 , -1    , -1    , -1    , -1    },
            {14 , -1    , -1    , -1    , -1    },
            {15 , -1    , -1    , -1    , 3800  },
            {16 , 1000  ,2200   ,3000   ,3800   }
    };

    int[,] arr4 = new int[,]
{
            {701  ,0      ,1000   ,2600   ,4400   },
            {702  ,-1     ,-1     ,-1     ,4200   },
            {703  ,-1     ,-1     ,-1     ,-1     },
            {704  ,-1     ,-1     ,3300   , -1    },
            {705  ,1100   ,-1     ,-1     , -1    },
            {706  ,-1     ,-1     ,-1     , 5300  },
            {707  ,-1     ,-1     ,-1     ,-1     },
            {708  ,-1     ,2000   , -1    , -1    },
            {709  ,-1     , -1    , 2700  , -1    },
            {710 ,-1     , -1    , -1    , -1    },
            {711 , -1    , -1    , -1    , 2800  },
            {712 , -1    , -1    , 3500  , -1    },
            {713 , -1    , -1    , -1    , -1    },
            {714 , -1    , -1    , -1    , -1    },
            {715 , -1    , -1    , -1    , 3800  },
            {716 , -1    , -1    , -1    , -1    },
            {717 , -1    , -1    , -1    , -1    },
            {718 , -1    , -1    , 2300  , -1    },
            {719 , -1    , 1000  , -1    , 3400  },
            {720 , -1    , -1    , -1    , -1    },
            {721 , 300   , -1    , -1    , -1    },
            {722 , -1    , -1    , -1    , -1    },
            {723 , -1    , -1    , 2800  , 4500  },
            {724 , -1    , -1    , -1    , -1    },
            {725 , -1    , -1    , -1    , -1    },
            {726 , 1700  , -1    , -1    , -1    },
            {727 , -1    , 1200  , -1    , 2850  },
            {728 , -1    , -1    , 2200  , -1    },
            {729 , -1    ,-1     , -1    , 3700  },
            {730 , 400   , 500   , 2500  , 3650  },
            {731 , 300   , 400   , 2800  , 3300  },

            {801  ,0      ,1000   ,2600   ,4400   },
            {802  ,-1     ,-1     ,-1     ,4200   },
            {803  ,-1     ,-1     ,-1     ,-1     },
            {804  ,-1     ,-1     ,3300   , -1    },
            {805  ,1100   ,-1     ,-1     , -1    },
            {806  ,-1     ,-1     ,-1     , 5300  },
            {807  ,-1     ,-1     ,-1     ,-1     },
            {808  ,-1     ,2000   , -1    , -1    },
            {809  ,-1     , -1    , 2700  , -1    },
            {810 ,-1     , -1    , -1    , -1    },
            {811 , -1    , -1    , -1    , 2800  },
            {812 , -1    , -1    , 3500  , -1    },
            {813 , -1    , -1    , -1    , -1    },
            {814 , -1    , -1    , -1    , -1    },
            {815 , -1    , -1    , -1    , 3800  },
            {816 , -1    , -1    , -1    , -1    },
            {817 , -1    , -1    , -1    , -1    },
            {818 , -1    , -1    , 2300  , -1    },
            {819 , -1    , 1000  , -1    , 3400  },
            {820 , -1    , -1    , -1    , -1    },
            {821 , 300   , -1    , -1    , -1    },
            {822 , -1    , -1    , -1    , -1    },
            {823 , -1    , -1    , 2800  , 4500  },
            {824 , -1    , -1    , -1    , -1    },
            {825 , -1    , -1    , -1    , -1    },
            {826 , 1700  , -1    , -1    , -1    },
            {827 , -1    , 1200  , -1    , 2850  },
            {828 , -1    , -1    , 2200  , -1    },
            {829 , -1    ,-1     , -1    , 3700  },
            {830 , 400   , 500   , 2500  , 3650  },
            {831 , 300   , 400   , 2800  , 3300  },
            {901  ,600    ,1000   ,2600   ,4400   },
            {902  ,1000     ,1000     ,1000     ,4200   },
            {903  ,1000     ,1000     ,1000     ,1000     },
            {904  ,1000     ,1000     ,3300   , 1000    },
            {905  ,1100   ,1000     ,1000     , 1000    },
            {906  ,1000     ,1000     ,1000     , 5300  },
            {907  ,1000     ,1000     ,1000     ,1000     },
            {908  ,1000     ,2000   , 1000    , 1000    },
            {909  ,1000     , 1000    , 2700  , 1000    },
            {910 ,1000     , 1000    , 1000    , 1000    },
            {911 , 1000    , 1000    , 1000    , 2800  },
            {912 , 1000    , 1000    , 3500  , 1000    },
            {913 , 1000    , 1000    , 1000    , 1000    },
            {914 , 1000    , 1000    , 1000    , 1000    },
            {915 , 1000    , 1000    , 1000    , 3800  },
            {916 , 1000    , 1000    , 1000    , 1000    },
            {917 , 1000    , 1000    , 1000    , 1000    },
            {918 , 1000    , 1000    , 2300  , 1000    },
            {919 , 1000    , 1000  , 1000    , 3400  },
            {920 , 1000    , 1000    , 1000    , 1000    },
            {921 , 300   , 1000    , 1000    , 1000    },
            {922 , 1000    , 1000    , 1000    , 1000    },
            {923 , 1000    , 1000    , 2800  , 4500  },
            {924 , 1000    , 1000    , 1000    , 1000    },
            {925 , 1000    , 1000    , 1000    , 1000    },
            {926 , 1700  , 1000    , 1000    , 1000    },
            {927 , 1000    , 1200  , 1000    , 2850  },
            {928 , 1000    , 1000    , 2200  , 1000    },
            {929 , 1000    ,1000     , 1000    , 3700  },
            {930 , 400   , 500   , 2500  , 3650  },

            {1001 , 1700  , 1000    , 1000    , 1000    },
            {1002 , 1000    , 1200  , 1000    , 2850  },
            {1003 , 1000    , 1000    , 2200  , 1000    },
            {1004 , 1000    ,1000     , 1000    , 3700  },
            {1005 , 400   , 500   , 2500  , 3650  },
            {1006 , 300   , 400   , 2800  , 3300  },
            {1007  ,1000     ,1000     ,1000     ,1000     },
            {1008  ,1000     ,2000   , 1000    , 1000    },
            {1009  ,1000     , 1000    , 2700  , 1000    },
            {1010 ,1000     , 1000    , 1000    , 1000    },
            {1011 , 1000    , 1000    , 1000    , 2800  },
            {1012 , 1000    , 1000    , 3500  , 1000    },
            {1013 , 1000    , 1000    , 1000    , 1000    },
            {1014 , 1000    , 1000    , 1000    , 1000    },
            {1015 , 1000    , 1000    , 1000    , 3800  },
            {1016 , 1000    , 1000    , 1000    , 1000    },
            {1017 , 1000    , 1000    , 1000    , 1000    },
            {1018 , 1000    , 1000    , 2300  , 1000    },
            {1019 , 1000    , 1000  , 1000    , 3400  },
            {1020 , 1000    , 1000    , 1000    , 1000    },
            {1021 , 300   , 1000    , 1000    , 1000    },
            {1022 , 1000    , 1000    , 1000    , 1000    },
            {1023 , 1000    , 1000    , 2800  , 4500  },
            {1024 , 1000    , 1000    , 1000    , 1000    },
            {1025 , 1000    , 1000    , 1000    , 1000    },
            {1026 , 1700  , 1000    , 1000    , 1000    },
            {1027 , 1000    , 1200  , 1000    , 2850  },
            {1028 , 1000    , 1000    , 2200  , 1000    },
            {1029 , 1000    ,1000     , 1000    , 3700  },
            {1030 , 400   , 500   , 2500  , 3650  },
            {1031 , 300   , 400   , 2800  , 3300  }

};
    #endregion

    int[,] arr5 = new int[,]
    {
            {101 , 1700  , 1000    , 1000    , 1000    },
            {102 , 1000    , 1200  , 1000    , 2850  },
            {103 , 1000    , 1000    , 2200  , 1000    },
            {1204 , 1000    ,1000     , 1000    , 3700  },
            {1205 , 400   , 500   , 2500  , 3650  },
            {1206 , 300   , 400   , 2800  , 3300  },
            {1207  ,1000     ,1000     ,1000     ,1000     },
            {1208  ,1000     ,2000   , 1000    , 1000    },
            {1209  ,1000     , 1000    , 2700  , 1000    },
            {1210 ,1000     , 1000    , 1000    , 1000    },
            {1211 , 1000    , 1000    , 1000    , 2800  },
            {1212 , 1000    , 1000    , 3500  , 1000    },
            {1213 , 1000    , 1000    , 1000    , 1000    },
            {1214 , 1000    , 1000    , 1000    , 1000    },
            {1215 , 1000    , 1000    , 1000    , 3800  },
            {1216 , 1000    , 1000    , 1000    , 1000    },
            {1217 , 1000    , 1000    , 1000    , 1000    },
            {1218 , 1000    , 1000    , 2300  , 1000    },
            {1219 , 1000    , 1000  , 1000    , 3400  },
            {1220 , 1000    , 1000    , 1000    , 1000    },
            {1221 , 300   , 1000    , 1000    , 1000    },
            {1222 , 1000    , 1000    , 1000    , 1000    },
            {1223 , 1000    , 1000    , 2800  , 4500  },
            {1224 , 1000    , 1000    , 1000    , 1000    },
            {1225 , 1000    , 1000    , 1000    , 1000    },
            {1226 , 1700  , 1000    , 1000    , 1000    },
            {1227 , 1000    , 1200  , 1000    , 2850  },
            {1228 , 1000    , 1000    , 2200  , 1000    },
            {1229 , 1000    ,1000     , 1000    , 3700  },
            {1230 , 400   , 500   , 2500  , 3650  },
            {1231 , 300   , 400   , 2800  , 3300  }
    };

    public DataTable CreateDataTable()
    {
        Arr = arr5;  

        DataTable table = new DataTable() { TableName = "YDJQTB" };

        table.Columns.Add("date", typeof(Int32));
        table.Columns.Add("TrafficCases", typeof(Int32));
        table.Columns.Add("ForHelpCases", typeof(Int32));
        table.Columns.Add("CriminalCases", typeof(Int32));
        table.Columns.Add("SecurityCases", typeof(Int32));

        int cols = Arr.Rank;// 秩，维数=2, 2维数组

        for (int i = 0; i < Arr.GetLength(cols - 2); ++i)
        {
            DataRow row = table.NewRow();
            for (int j = 0; j < Arr.GetLength(cols - 1); ++j)
            {
                row[j] = Arr[i, j];
            }
            table.Rows.Add(row);
        }

        return table;
    }
}